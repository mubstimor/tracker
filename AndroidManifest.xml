<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.ptts"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="11"
        android:targetSdkVersion="19" />

    <!-- Required for fetching feed data. -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- Required to register a SyncStatusObserver to display a "syncing..." progress indicator. -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <!-- Required to enable our SyncAdapter after it's created. -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <!-- Required because we're manually creating a new account. -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    
    <!-- Google Maps related permissions -->
	<permission
	    android:name="com.ptts.permission.MAPS_RECEIVE"
	    android:protectionLevel="signature" />

	<!-- Access Google based webservices -->
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES"/>
    
     <uses-permission android:name="com.ptts.permission.MAPS_RECEIVE"/>
     
      <!-- Network State Permissions to detect Internet status -->
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
     
     <!-- External storage for caching. -->
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
     
     <!-- The following two permissions are not required to use
         Google Maps Android API v2, but are recommended. -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_MOCK_LOCATION" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>

    <!-- Maps API needs OpenGL ES 2.0. -->
    <uses-feature
            android:glEsVersion="0x00020000"
            android:required="true"/>
    

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/ExampleTheme" >
        
        <uses-library android:name="com.google.android.maps" />
        <meta-data
                android:name="com.google.android.maps.v2.API_KEY"
                android:value="AIzaSyCd2kAWZkNXXi0bDNujRpv0MCZJ8qJxVeE"/>

        <meta-data
                android:name="com.google.android.gms.version"
                android:value="@integer/google_play_services_version" />
        
        <activity
            android:name="com.ptts.Splash"
            android:label="@string/app_name"
            android:theme="@style/SplashTheme" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.ptts.ViewRoutes"
            android:label="@string/title_activity_view_routes" >
        </activity>
        <activity
            android:name="com.ptts.FirstTimeActivity"
            android:label="@string/title_activity_first_time" >
        </activity>
        <activity
            android:name="com.ptts.Feedback"
            android:label="@string/title_activity_feedback" >
        </activity>
        <activity
            android:name="com.ptts.SearchActivity"
            android:label="@string/title_activity_search" >
        </activity>
        <activity
            android:name="com.ptts.SettingsActivity"
            android:label="@string/title_activity_settings" >
        </activity>

        <!--
        ContentProvider to store feed data.

        The "authorities" here are defined as part of a ContentProvider interface. It's used here
        as an attachment point for the SyncAdapter. See res/xml/syncadapter.xml and
        SyncService.java.

        Since this ContentProvider is not exported, it will not be accessible outside of this app's
        package.
        -->
        <provider
            android:name="com.ptts.provider.FeedProvider"
            android:authorities="com.ptts"
            android:exported="false" />

        <!--
        This service implements our SyncAdapter. It needs to be exported, so that the system
        sync framework can access it.
        -->
        <service
            android:name="com.ptts.sync.SyncService"
            android:exported="true" >

            <!--
            This intent filter is required. It allows the system to launch our sync service
            as needed.
            -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!--
        This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
        feed), this account's implementation is largely empty.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here.
        -->
        <service android:name="com.ptts.accounts.GenericAccountService" >

            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XMLf ile which describes our account service. -->
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>

        <activity
            android:name="com.ptts.fragments.RouteDetails"
            android:configChanges="orientation|screenSize"
            android:label="@string/title_activity_route_details" >
        </activity>
        <activity
            android:name="com.ptts.fragments.BusLocation"
            android:label="@string/title_activity_bus_location" >
        </activity>
    </application>

</manifest>
